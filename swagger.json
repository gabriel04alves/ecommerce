{
  "openapi": "3.0.0",
  "info": {
    "title": "E-commerce API",
    "description": "API de e-commerce para gerenciamento de usuários, autenticação e operações relacionadas.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Servidor local"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Sign up",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Tux Linux"
                  },
                  "email": {
                    "type": "string",
                    "example": "tuxlinux@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha123"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Tux Linux",
                  "email": "tuxlinux@example.com"
                }
              }
            }
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },

    "/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "tuxlinux@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "senha123"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "example": {
                  "user": {
                    "id": 1,
                    "name": "Tux Linux",
                    "email": "tuxlinux@example.com"
                  },
                  "token": "jwt-token-here"
                }
              }
            }
          },
          "400": {
            "description": "Incorrect password"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/auth/me": {
      "get": {
        "summary": "Get authenticated user data",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authenticated user data",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Tux Linux",
                  "email": "tuxlinux@example.com"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users": {
      "get": {
        "summary": "List users with pagination - (Admin)",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number to be returned (starting from 1)"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Maximum number of users to be returned per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "example": {
                  "users": [
                    {
                      "id": 1,
                      "name": "Tux Linux",
                      "email": "tuxlinux@example.com"
                    },
                    {
                      "id": 2,
                      "name": "Tux User",
                      "email": "tuxuser@example.com"
                    }
                  ],
                  "total": 20,
                  "page": 1,
                  "limit": 10
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update user information",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true
              },
              "example": {
                "Field": "Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Tux Linux",
                  "email": "tuxlinux@example.com"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID - (Admin)",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Tux Linux",
                  "email": "tuxlinux@example.com"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users/{id}/role": {
      "put": {
        "summary": "Change user role - (Admin)",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "example": "ADMIN"
                  }
                },
                "required": ["role"]
              },
              "example": {
                "role": "ADMIN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User role changed successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "role": "ADMIN"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users/address/{id}": {
      "delete": {
        "summary": "Delete an address by ID",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address deleted successfully"
          },
          "404": {
            "description": "Address not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/users/address": {
      "get": {
        "summary": "List all addresses for authenticated user",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of addresses",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "lineOne": "Rua Exemplo, 456",
                    "lineTwo": "Apto 101",
                    "city": "Cidade Exemplo",
                    "country": "Brasil",
                    "postalCode": "00000-000",
                    "userId": 1
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/products": {
      "post": {
        "summary": "Create a new product - (Admin)",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sample Product"
                  },
                  "description": {
                    "type": "string",
                    "example": "Sample Product Description"
                  },
                  "price": {
                    "type": "number",
                    "example": 99.99
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["tag1", "tag2"]
                  }
                },
                "required": ["name", "price", "tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully created",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Sample Product",
                  "price": 99.99,
                  "tags": "tag1,tag2"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "List products",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "example": 0
            },
            "description": "Number of results to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "example": {
                  "count": 2,
                  "data": [
                    {
                      "id": 1,
                      "name": "Sample Product",
                      "price": 99.99,
                      "tags": "tag1,tag2"
                    },
                    {
                      "id": 2,
                      "name": "Another Product",
                      "price": 199.99,
                      "tags": "tag3,tag4"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },

    "/products/multiple": {
      "post": {
        "summary": "Create multiple products - (Admin)",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Clean Code"
                    },
                    "description": {
                      "type": "string",
                      "example": "A handbook of agile software craftsmanship."
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": ["Programming", "Agile", "Best Practices"]
                    },
                    "price": {
                      "type": "number",
                      "example": 32.99
                    }
                  },
                  "required": ["name", "price", "tags"]
                }
              },
              "example": [
                {
                  "name": "Clean Code",
                  "description": "A handbook of agile software craftsmanship.",
                  "tags": ["Programming", "Agile", "Best Practices"],
                  "price": 32.99
                },
                {
                  "name": "The Mythical Man-Month",
                  "description": "Essays on software engineering.",
                  "tags": ["Software Engineering", "Essays", "Classic"],
                  "price": 28.0
                }
              ]
            }
          }
        },
        "responses": {
          "201": {
            "description": "Products successfully created",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Clean Code",
                    "description": "A handbook of agile software craftsmanship.",
                    "tags": ["Programming", "Agile", "Best Practices"],
                    "price": 32.99
                  },
                  {
                    "id": 2,
                    "name": "The Mythical Man-Month",
                    "description": "Essays on software engineering.",
                    "tags": ["Software Engineering", "Essays", "Classic"],
                    "price": 28.0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/products/{id}": {
      "put": {
        "summary": "Update a product - (Admin)",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated Product"
                  },
                  "price": {
                    "type": "number",
                    "example": 149.99
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["tag5", "tag6"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product successfully updated",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Updated Product",
                  "price": 149.99,
                  "tags": "tag5,tag6"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete a product - (Admin)",
        "tags": ["Product"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product successfully deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Product deleted"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "summary": "Get product by ID",
        "tags": ["Product"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "name": "Sample Product",
                  "price": 99.99,
                  "tags": "tag1,tag2"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },

    "/carts": {
      "post": {
        "summary": "Add item to cart",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCartItem"
              },
              "example": {
                "productId": 36,
                "quantity": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Item added successfully"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "403": {
            "description": "Unauthorized access"
          }
        }
      },
      "get": {
        "summary": "Get cart items",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Cart items retrieved successfully",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "name": "Clean Code",
                    "quantity": 1,
                    "price": 32.99
                  },
                  {
                    "id": 2,
                    "name": "The Mythical Man-Month",
                    "quantity": 1,
                    "price": 28.0
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Cart is empty"
          }
        }
      }
    },

    "/carts/{id}": {
      "delete": {
        "summary": "Delete item from cart",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cart item deleted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Item deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Cart item not found"
          },
          "403": {
            "description": "Unauthorized to delete this cart item"
          }
        }
      },
      "put": {
        "summary": "Change item quantity in cart",
        "tags": ["Cart"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeQuantity"
              },
              "example": {
                "quantity": 7
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item quantity updated",
            "content": {
              "application/json": {
                "example": {
                  "message": "Quantity updated successfully"
                }
              }
            }
          },
          "404": {
            "description": "Cart item not found"
          },
          "403": {
            "description": "Unauthorized access"
          }
        }
      }
    },

    "/orders": {
      "post": {
        "summary": "Create an order",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Order created successfully",
                  "orderId": 123
                }
              }
            }
          },
          "404": {
            "description": "Cart is empty or address not found"
          }
        }
      },
      "get": {
        "summary": "List user orders",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User orders retrieved successfully",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "status": "Pending",
                    "total": 99.99,
                    "createdAt": "2024-09-25T12:00:00Z"
                  },
                  {
                    "id": 2,
                    "status": "Completed",
                    "total": 149.99,
                    "createdAt": "2024-09-24T10:30:00Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "No orders found"
          }
        }
      }
    },

    "/orders/{id}": {
      "get": {
        "summary": "Get order by ID",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details retrieved successfully",
            "content": {
              "application/json": {
                "example": {
                  "id": 1,
                  "status": "Pending",
                  "total": 99.99,
                  "items": [
                    {
                      "productId": 36,
                      "quantity": 5
                    }
                  ],
                  "createdAt": "2024-09-25T12:00:00Z"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },

    "/orders/{id}/cancel": {
      "put": {
        "summary": "Cancel an order",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Order cancelled successfully"
                }
              }
            }
          },
          "400": {
            "description": "Order is already cancelled"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },

    "/orders/index": {
      "get": {
        "summary": "List all orders (Admin)",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "status": "Pending",
                    "total": 99.99
                  },
                  {
                    "id": 2,
                    "status": "Completed",
                    "total": 149.99
                  }
                ]
              }
            }
          }
        }
      }
    },

    "/orders/{id}/status": {
      "put": {
        "summary": "Change order status (Admin)",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderStatus"
              },
              "example": {
                "status": "Shipped"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Order status updated successfully"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },

    "/orders/users/{userId}": {
      "get": {
        "summary": "List all orders for a specific user (Admin)",
        "tags": ["Order"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders for the user retrieved successfully",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": 1,
                    "status": "Pending",
                    "total": 99.99,
                    "createdAt": "2024-09-25T12:00:00Z"
                  },
                  {
                    "id": 2,
                    "status": "Completed",
                    "total": 149.99,
                    "createdAt": "2024-09-24T10:30:00Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "No orders found for the user"
          }
        }
      }
    }
  }
}
